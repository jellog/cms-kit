/* This file is automatically generated by JELLOG framework to use MVC Controllers from javascript. */


// module cms-kit-pro

(function(){

  // controller dataGap.cmsKit.public.urlShorting.urlShortingPublic

  (function(){

    jellog.utils.createNamespace(window, 'dataGap.cmsKit.public.urlShorting.urlShortingPublic');

    dataGap.cmsKit.public.urlShorting.urlShortingPublic.findBySource = function(source, ajaxParams) {
      return jellog.ajax($.extend(true, {
        url: jellog.appPath + 'api/cms-kit-public/url-shorting' + jellog.utils.buildQueryString([{ name: 'source', value: source }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

  // controller dataGap.cmsKit.public.polls.pollPublic

  (function(){

    jellog.utils.createNamespace(window, 'dataGap.cmsKit.public.polls.pollPublic');

    dataGap.cmsKit.public.polls.pollPublic.getPoll = function(input, ajaxParams) {
      return jellog.ajax($.extend(true, {
        url: jellog.appPath + 'api/cms-kit-public/poll/getpoll' + jellog.utils.buildQueryString([{ name: 'widgetName', value: input.widgetName }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    dataGap.cmsKit.public.polls.pollPublic.getResult = function(id, ajaxParams) {
      return jellog.ajax($.extend(true, {
        url: jellog.appPath + 'api/cms-kit-public/poll/showresult' + jellog.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    dataGap.cmsKit.public.polls.pollPublic.submitVote = function(id, submitPollInput, ajaxParams) {
      return jellog.ajax($.extend(true, {
        url: jellog.appPath + 'api/cms-kit-public/poll/' + id + '',
        type: 'POST',
        dataType: null,
        data: JSON.stringify(submitPollInput)
      }, ajaxParams));
    };

  })();

  // controller dataGap.cmsKit.public.newsletters.newsletterRecordPublic

  (function(){

    jellog.utils.createNamespace(window, 'dataGap.cmsKit.public.newsletters.newsletterRecordPublic');

    dataGap.cmsKit.public.newsletters.newsletterRecordPublic.create = function(input, ajaxParams) {
      return jellog.ajax($.extend(true, {
        url: jellog.appPath + 'api/cms-kit-public/newsletter',
        type: 'POST',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    dataGap.cmsKit.public.newsletters.newsletterRecordPublic.getNewsletterPreferences = function(emailAddress, ajaxParams) {
      return jellog.ajax($.extend(true, {
        url: jellog.appPath + 'api/cms-kit-public/newsletter/emailAddress' + jellog.utils.buildQueryString([{ name: 'emailAddress', value: emailAddress }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

    dataGap.cmsKit.public.newsletters.newsletterRecordPublic.updatePreferences = function(input, ajaxParams) {
      return jellog.ajax($.extend(true, {
        url: jellog.appPath + 'api/cms-kit-public/newsletter',
        type: 'PUT',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

    dataGap.cmsKit.public.newsletters.newsletterRecordPublic.getOptionByPreference = function(preference, ajaxParams) {
      return jellog.ajax($.extend(true, {
        url: jellog.appPath + 'api/cms-kit-public/newsletter/preference-options' + jellog.utils.buildQueryString([{ name: 'preference', value: preference }]) + '',
        type: 'GET'
      }, ajaxParams));
    };

  })();

  // controller dataGap.cmsKit.public.contact.contactPublic

  (function(){

    jellog.utils.createNamespace(window, 'dataGap.cmsKit.public.contact.contactPublic');

    dataGap.cmsKit.public.contact.contactPublic.sendMessage = function(input, ajaxParams) {
      return jellog.ajax($.extend(true, {
        url: jellog.appPath + 'api/cms-kit-public/contacts',
        type: 'POST',
        dataType: null,
        data: JSON.stringify(input)
      }, ajaxParams));
    };

  })();

})();


